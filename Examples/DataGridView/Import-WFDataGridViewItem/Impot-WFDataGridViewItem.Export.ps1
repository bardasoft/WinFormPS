#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 4c00885a-f8a9-4e3e-a5d0-04cad8faaa8b
# Source File: Impot-WFDataGridViewItem.psf
#------------------------------------------------------------------------
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
MQwAAB+LCAAAAAAABADVV2Fv2jAQ/T5p/8Hy50AIgWVIIVLLRovWbWgwum+TSQ7q4cTIdqDZr59D
UtoSKAEB0oQUcHJ37969Z0e4P8DnCxDJJ6II0j8k5VEb17H3/h1C7ndBpzQirEsZfCMheL1wzlXl
vpuG3wgajCgsewrC6lxOXLMQnhUZ/wFfIZXMoY0HiUzD72kU8KWsdrkIs6uBtj0y0CjvqVGtpR8D
dWKmYgHtCGIlCDNQPx4z6n+BZMhnELXHjkOafvOD1bIbUPvYwijSrbTxRNfTtdOv/iDlIdSKBUb+
A2WB0Km4wyMlOJMZfd17X/A5CJXkNTqMQqQG9C9gr1GzDGTbNdd8CtqRlE4Ce7vg96YP4VFhb52K
KijLrmxqUKy0f/Iva5xdgUCDTTXYQoNZb419y+A5i8PoFkigm7kFOn1YqfCVB3q0V7Hi6aowgGKd
O+4Tpclgz6obqGGVSMnke9V7iazMI7bjGKjuOCUShmTciwJ4xF69KKSZKVle1+tYKR6dXdHxCuYG
1ADEgvpwmKjPYrRsA1lF3rvE2IQtrYfT1HLYB6lRRuxsi+p+KuUb+ilhRGVM2EAlDK6JP9Me5wJ7
QxFvzf+80EfP8znkz4pz+L2675qr0P/GO5qqD1Ie6510Ix/jnRz2nN4pvhve8k75hk7qnRx2r3de
L66khFDrDPIpNr+TeKH0uWB0fAKvuOa66iZK5s5LYJx8B+xHTF/LlwESZEmj6TFYNXvSnDgTywqa
NWKT/Vi/QnYZTlRom3KR5KfiUZIdzK7DBVyEXs4q37an57ZeZnvbNV/+RfD+AeWey20xDAAA#>
#endregion

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2016 v5.2.117
     Generated on:       2016-03-24 4:26 PM
     Generated by:        
     Organization:        
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2016
#>
#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Call-Impot-WFDataGridViewItem_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.DirectoryServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.ServiceProcess, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formWinformPSImportDataG = New-Object 'System.Windows.Forms.Form'
	$datagridview1 = New-Object 'System.Windows.Forms.DataGridView'
	$buttonGetService = New-Object 'System.Windows.Forms.Button'
	$buttonGetProcess = New-Object 'System.Windows.Forms.Button'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	function Import-DataGridViewItem
	{
		<#
		.SYNOPSIS
			This functions helps you load items into a DataGridView.
	
		.DESCRIPTION
			Use this function to dynamically load items into the DataGridView control.
	
		.PARAMETER  DataGridView
			The ComboBox control you want to add items to.
	
		.PARAMETER  Item
			The object or objects you wish to load into the ComboBox's items collection.
		
		.PARAMETER  DataMember
			Sets the name of the list or table in the data source for which the DataGridView is displaying data.
		
		.NOTES
			SAPIEN Technologies, Inc.
			http://www.sapien.com/
		#>
		
		Param (
			[ValidateNotNull()]
			[Parameter(Mandatory = $true)]
			[System.Windows.Forms.DataGridView]$DataGridView,
			
			[ValidateNotNull()]
			[Parameter(Mandatory = $true)]
			$Item,
			
			[Parameter(Mandatory = $false)]
			[string]$DataMember
		)
		BEGIN
		{
			Add-Type -AssemblyName System.Windows.Forms
		}
		PROCESS
		{
			$DataGridView.SuspendLayout()
			$DataGridView.DataMember = $DataMember
			
			if ($Item -is [System.ComponentModel.IListSource]`
			-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView])
			{
				$DataGridView.DataSource = $Item
			}
			else
			{
				$array = New-Object System.Collections.ArrayList
				
				if ($Item -is [System.Collections.IList])
				{
					$array.AddRange($Item)
				}
				else
				{
					$array.Add($Item)
				}
				$DataGridView.DataSource = $array
			}
		}
		END
		{
			$DataGridView.ResumeLayout()
		}
	}
	
	
	$buttonGetProcess_Click = {
		# Get the Processes
		$Processes = Get-Process
		
		# Load the result in the DataGridview
		Import-DataGridViewItem -DataGridView $datagridview1 -Item $Processes
	}
	$buttonGetService_Click={
		# Get the Services
		$Services = Get-Service
		
		# Load the result in the DataGridview
		Import-DataGridViewItem -DataGridView $datagridview1 -Item $Services
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formWinformPSImportDataG.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$buttonGetService.remove_Click($buttonGetService_Click)
			$buttonGetProcess.remove_Click($buttonGetProcess_Click)
			$formWinformPSImportDataG.remove_Load($Form_StateCorrection_Load)
			$formWinformPSImportDataG.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch [Exception]
		{ }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formWinformPSImportDataG.SuspendLayout()
	#
	# formWinformPSImportDataG
	#
	$formWinformPSImportDataG.Controls.Add($datagridview1)
	$formWinformPSImportDataG.Controls.Add($buttonGetService)
	$formWinformPSImportDataG.Controls.Add($buttonGetProcess)
	$formWinformPSImportDataG.ClientSize = '401, 330'
	$formWinformPSImportDataG.Name = 'formWinformPSImportDataG'
	$formWinformPSImportDataG.Text = 'WinformPS - Import-DataGridViewItem'
	#
	# datagridview1
	#
	$datagridview1.ColumnHeadersHeightSizeMode = 'AutoSize'
	$datagridview1.Location = '12, 41'
	$datagridview1.Name = 'datagridview1'
	$datagridview1.Size = '377, 277'
	$datagridview1.TabIndex = 2
	#
	# buttonGetService
	#
	$buttonGetService.Location = '93, 12'
	$buttonGetService.Name = 'buttonGetService'
	$buttonGetService.Size = '75, 23'
	$buttonGetService.TabIndex = 1
	$buttonGetService.Text = 'Get-Service'
	$buttonGetService.UseVisualStyleBackColor = $True
	$buttonGetService.add_Click($buttonGetService_Click)
	#
	# buttonGetProcess
	#
	$buttonGetProcess.Location = '12, 12'
	$buttonGetProcess.Name = 'buttonGetProcess'
	$buttonGetProcess.Size = '75, 23'
	$buttonGetProcess.TabIndex = 0
	$buttonGetProcess.Text = 'Get-Process'
	$buttonGetProcess.UseVisualStyleBackColor = $True
	$buttonGetProcess.add_Click($buttonGetProcess_Click)
	$formWinformPSImportDataG.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formWinformPSImportDataG.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formWinformPSImportDataG.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formWinformPSImportDataG.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formWinformPSImportDataG.ShowDialog()

} #End Function

#Call the form
Call-Impot-WFDataGridViewItem_psf | Out-Null
